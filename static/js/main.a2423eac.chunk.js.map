{"version":3,"sources":["logo.svg","Map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dataArray","i","covid_fcc","length","element","console","log","properties","cases","push","minVal","d3","maxVal","ramp","domain","range","globe","world","j","data","name","country","adm0_a3","sovereignt","name_long","admin","casesPerOneMillion","tooltip","append","style","html","Map","maximizeWorld","maximizeZoo","svg","this","refs","jsx_map","call","on","attr","transform","toString","zoo","albersProjection","scale","center","translate","width","height","geoPath","projection","leftSideProjection","rightSideProjection","cornerProjection","cornerPath","selectAll","enter","d","pageY","pageX","transition","duration","className","ref","id","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"slysBAAAA,EAAOC,QAAU,IAA0B,kC,kFCiB1C,I,4HADIC,G,MAAY,IACPC,EAAI,EAAGA,EAAIC,IAAmBC,OAAQF,IAAI,CACjD,IAAIG,EAAUF,IAAmBD,GACjCI,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAI,OAAQF,EAAQG,WAAWC,OACvCR,EAAUS,KAAKL,EAAQG,WAAWC,OAOlC,IAJF,IAAIE,EAASC,IAAOX,GACdY,EAASD,IAAOX,GAChBa,EAAOF,MAAcG,OAAO,CAACJ,EAAOE,IAASG,MAAM,CAb1C,UACC,YAcLd,EAAI,EAAGA,EAAIe,IAAeb,OAAQF,IAEzC,IADA,IAAIgB,EAAQD,IAAef,GAClBiB,EAAI,EAAGA,EAAIhB,IAAmBC,OAAQe,IAAI,CACjD,IAAIC,EAAOjB,IAAmBgB,IAC1BD,EAAMV,WAAWa,OAASD,EAAKZ,WAAWc,SAC5CJ,EAAMV,WAAWe,UAAYH,EAAKZ,WAAWc,SAC7CJ,EAAMV,WAAWgB,aAAeJ,EAAKZ,WAAWc,SAChDJ,EAAMV,WAAWiB,YAAcL,EAAKZ,WAAWc,SAC/CJ,EAAMV,WAAWkB,QAAUN,EAAKZ,WAAWc,SAIV,UAA1BJ,EAAMV,WAAWa,MAAgD,2BAA5BD,EAAKZ,WAAWc,SAI1B,gBAA3BJ,EAAMV,WAAWkB,OAAuD,aAA5BN,EAAKZ,WAAWc,SAI7B,YAA/BJ,EAAMV,WAAWiB,WAA2B,qCAAAL,EAAKZ,WAAWc,SAI7B,mBAA/BJ,EAAMV,WAAWiB,WAA8D,OAA5BL,EAAKZ,WAAWc,SAIpC,qCAA/BJ,EAAMV,WAAWiB,WAAgF,QAA5BL,EAAKZ,WAAWc,SAItD,mBAA/BJ,EAAMV,WAAWiB,WAA8D,YAA5BL,EAAKZ,WAAWc,SAIpC,2BAA/BJ,EAAMV,WAAWiB,WAAsE,WAA5BL,EAAKZ,WAAWc,SAI5C,yBAA/BJ,EAAMV,WAAWiB,WAAoE,QAA5BL,EAAKZ,WAAWc,SAI/C,UAA1BJ,EAAMV,WAAWa,MAAgD,yBAA5BD,EAAKZ,WAAWc,WAnC5DJ,EAAMV,WAAN,MAA4BY,EAAKZ,WAAWC,MAC5CS,EAAMV,WAAN,mBAAyCY,EAAKZ,WAAWmB,oBA0ClE,IAAIC,EAAUhB,IAAU,QACvBiB,OAAO,OACPC,MAAM,WAAY,YAClBA,MAAM,UAAW,MACjBA,MAAM,aAAc,UACpBA,MAAM,aAAc,qBACpBA,MAAM,UAAW,OACjBA,MAAM,SAAU,mBAChBC,KAAK,+BA+NaC,E,kDAxNjB,aAAc,wC,gEAQd,IAEIC,GAAgB,EAChBC,GAAc,EAUZC,EARUvB,IAAUwB,KAAKC,KAAKC,SAGrCC,KAAK3B,MAAU4B,GAAG,QAqLT,WACEL,EAAIM,KAAK,YAAa7B,IAAS8B,UAAUC,YACzCzB,EAAMuB,KAAK,YAAa7B,IAAS8B,UAAUC,YAC3CC,EAAIH,KAAK,YAAa7B,IAAS8B,UAAUC,gBAlLhDd,OAAQ,OACRY,KAAM,QA3BC,MA4BPA,KAAM,SA3BE,KA4BRA,KAAK,KAAM,SACXA,KAAK,SAAU,OACfZ,OAAO,KAGJgB,EACJjC,MACCkC,MAAM,KAENC,OAAO,CAAC,EAAG,KACXC,UAAU,CAACC,IAAQC,MAEhBC,EAAUvC,MACbwC,WAAWP,GAIRQ,EACJzC,MACCkC,MAAM,IAENC,OAAO,CAAC,EAAG,KACXC,UAAU,CAACC,IAAQC,MAOZI,GALW1C,MAClBwC,WAAWC,GAKRzC,MACCkC,MAAM,IAENC,OAAO,CAAC,EAAG,KACXC,UAAU,CA/DP,KA+Dc,IAAIE,OAOtBK,GALoB3C,MACnBwC,WAAWE,GAKhB1C,MACCkC,MAAM,IAENC,OAAO,CAAC,EAAG,KACXC,UAAU,CA3EH,KA2EU,GA1ET,IA0EmB,KAExBQ,EAAa5C,MAChBwC,WAAWG,GAIFrC,EAAQiB,EACXN,OAAQ,KAGRX,EAAMuC,UAAW,QACjBrC,KAAMH,KACNyC,QACA7B,OAAQ,QACRY,KAAK,QAAQ,SAASkB,GACrB,OAAIA,EAAEnD,WAAWC,MAAQ,EAClBK,EAAK6C,EAAEnD,WAAWC,OAEhB,UAGVgC,KAAM,SAAU,QAChBA,KAAM,IAAKU,GACXV,KAAK,QAAS,QACdA,KAAK,SAAU,OACfD,GAAG,aAAa,SAASmB,GACzB,GAAIA,EAAEnD,WAAWC,MAGd,OAFAmB,EAAQG,KAAR,UAAgB4B,EAAEnD,WAAWiB,UAA7B,iCACEkC,EAAEnD,WAAWC,MADf,WAEOmB,EAAQE,MAAM,aAAc,WAAWA,MAAM,aAAc,aAGrEU,GAAG,aAAa,WAAW,OAAOZ,EAAQE,MAAM,MAAQlB,IAASgD,MAAM,GAAI,MAAM9B,MAAM,OAAQlB,IAASiD,MAAM,GAAI,SAClHrB,GAAG,YAAY,WAAW,OAAOZ,EAAQE,MAAM,aAAc,aAC7DU,GAAG,SAGL,WACMP,GAeHA,GAAgB,EAChBrB,IAAa,QACZkD,aACAC,SAAS,KACTtB,KAAK,IAAKe,IAEG,EACdZ,EAAIa,UAAU,QACbK,aACAC,SAAS,KACTtB,KAAK,IAAKU,KAxBXlB,GAAgB,EAEhBf,EAAMuC,UAAU,QACfK,aACAC,SAAS,KACTtB,KAAK,IAAKU,IAEG,EACdP,EAAIa,UAAU,QACbK,aACAC,SAAS,KACTtB,KAAK,IAAKe,OAkBb,IAAIZ,EAAMT,EACTN,OAAQ,KAGRe,EAAIa,UAAW,QACfrC,KAAMH,KACNyC,QACA7B,OAAQ,QACRY,KAAK,OAAQ,QACbA,KAAM,SAAU,QAChBA,KAAM,IAAKe,GACXf,KAAK,QAAS,QAUdD,GAAG,SAEJ,WACKN,GAcHA,GAAc,EACdU,EAAIa,UAAU,QACXK,aACAC,SAAS,KACTtB,KAAK,IAAKe,IAEK,EAChBtC,EAAMuC,UAAU,QACfK,aACAC,SAAS,KACTtB,KAAK,IAAKU,KAvBXjB,GAAc,EACdU,EAAIa,UAAU,QACbK,aACAC,SAAS,KACTtB,KAAK,IAAKU,IAEK,EAChBjC,EAAMuC,UAAU,QACfK,aACAC,SAAS,KACTtB,KAAK,IAAKe,S,+BAiCnB,OACE,yBAAKQ,UAAU,cACb,yBAAKC,IAAI,UAAUC,GAAG,a,GAnNdC,IAAMC,WC7ETC,E,uKARb,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,W,GALYG,IAAMC,WCMJE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjF,QAAQiF,MAAMA,EAAMC,c","file":"static/js/main.a2423eac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport * as d3 from 'd3';\n// import { sliderBottom } from 'd3-simple-slider';\nimport { zoom } from 'd3-zoom'\nimport * as covid_fcc from \"./data/covid_fccGEO.geo.json\"\nimport * as countries from \"./data/countries.geo.json\"\nimport * as globe from \"./data/custom.geo.json\"\nimport './App.css';\nimport { drag } from 'd3';\nimport { gsap } from \"gsap\";\n\n // color scale\n let lowColor = '#f9f9f9'\n let highColor = '#bc2a66'\n\n let dataArray = []\n for (let i = 0; i < covid_fcc.features.length; i++){\n   let element = covid_fcc.features[i]\n   console.log('ELEMENT', element)\n   console.log('CASE', element.properties.cases)\n   dataArray.push(element.properties.cases)\n }\n\n var minVal = d3.min(dataArray)\n   var maxVal = d3.max(dataArray)\n   var ramp = d3.scaleLog().domain([minVal,maxVal]).range([lowColor,highColor])\n\n   for (let i = 0; i < globe.features.length; i++){\n     let world = globe.features[i]\n     for (let j = 0; j < covid_fcc.features.length; j++){\n       let data = covid_fcc.features[j]\n       if (world.properties.name === data.properties.country || \n         world.properties.adm0_a3 === data.properties.country ||\n         world.properties.sovereignt === data.properties.country ||\n         world.properties.name_long === data.properties.country ||\n         world.properties.admin === data.properties.country)  {\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n       else if (world.properties.name === 'Libya' && data.properties.country === 'Libyan Arab Jamahiriya'){\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n       else if (world.properties.admin === 'South Korea' && data.properties.country === 'S. Korea'){\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n       else if (world.properties.name_long === 'Lao PDR' && data.properties.country === `Lao People's Democratic Republic`){\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n       else if (world.properties.name_long === 'United Kingdom' && data.properties.country === \"UK\"){\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n       else if (world.properties.name_long === 'Democratic Republic of the Congo' && data.properties.country === \"DRC\"){\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n       else if (world.properties.name_long === 'Czech Republic' && data.properties.country === \"Czechia\"){\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n       else if (world.properties.name_long === 'Bosnia and Herzegovina' && data.properties.country === \"Bosnia\"){\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n       else if (world.properties.name_long === 'United Arab Emirates' && data.properties.country === \"UAE\"){\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n       else if (world.properties.name === 'Syria' && data.properties.country === \"Syrian Arab Republic\"){\n         world.properties[\"cases\"] = data.properties.cases \n         world.properties[\"casesPerOneMillion\"] = data.properties.casesPerOneMillion\n       }\n     }\n   }\n\n// tooltip \nvar tooltip = d3.select(\"body\")\n.append(\"div\")\n.style(\"position\", \"absolute\")\n.style(\"z-index\", \"10\")\n.style(\"visibility\", \"hidden\")\n.style(\"background\", \"rgba(255 255 255)\")\n.style(\"padding\", \"5px\")\n.style(\"border\", \"1px solid black\")\n.html(\"a simple tooltip <br> hello\" );\n\n\nvar width = 1400;\nvar height = 700;\n\nclass Map extends React.Component {\n  constructor(){\n    super()\n    // this.click = this.click.bind(this);\n  }\n\n\ncomponentDidMount(){\n\n  var minimizeWorld = false; \n  var minimizeZoo = false;\n  var maximizeWorld = false; \n  var maximizeZoo = false; \n\nconst container = d3.select(this.refs.jsx_map)\n\n\n.call(d3.zoom().on(\"zoom\", zoomed));\n\n\n    // Create SVG\n\n    var svg = container\n    .append( 'svg' )\n    .attr( 'width', width )\n    .attr( 'height', height )\n    .attr(\"id\", \"chart\")\n    .attr(\"zIndex\", \"100\")\n    .append(\"g\")\n\n// original path \n    var albersProjection = \n    d3.geoMercator()\n    .scale(150)\n    // .rotate([71.057,0])\n    .center([0, 40])\n    .translate([width/2,height/2])\n\n    var geoPath = d3.geoPath()\n    .projection(albersProjection);\n\n    // left Side path \n\n    var leftSideProjection = \n    d3.geoMercator()\n    .scale(75)\n    // .rotate([71.057,0])\n    .center([0, 40])\n    .translate([width/4,height/2])\n\n    var leftSidePath = d3.geoPath()\n    .projection(leftSideProjection);\n\n    // right side path \n\n        var rightSideProjection = \n        d3.geoMercator()\n        .scale(75)\n        // .rotate([71.057,0])\n        .center([0, 40])\n        .translate([width/1.5,height/2])\n    \n        var rightSidePath = d3.geoPath()\n        .projection(rightSideProjection);\n\n    //corner path \n\n    var cornerProjection = \n    d3.geoMercator()\n    .scale(25)\n    // .rotate([71.057,0])\n    .center([0, 40])\n    .translate([width/12,height/6])\n\n    var cornerPath = d3.geoPath()\n    .projection(cornerProjection);\n\n        \n      \n          var world = svg\n          .append( \"g\" )\n          \n      \n           world.selectAll( \"path\" )\n          .data( globe.features )\n          .enter()\n          .append( \"path\" )\n          .attr(\"fill\", function(d) {\n            if (d.properties.cases > 0){\n            return ramp(d.properties.cases) }\n          else {\n              return '#ccc'\n          }\n           })\n          .attr( \"stroke\", \"#333\")\n          .attr( \"d\", geoPath )\n          .attr(\"class\", \"data\")\n          .attr(\"zIndex\", \"100\")\n          .on(\"mouseover\", function(d){\n           if (d.properties.cases){\n              tooltip.html(`${d.properties.name_long} <br> \n              ${d.properties.cases} cases`); \n              return tooltip.style(\"visibility\", \"visible\").style(\"text-align\", \"center\");\n           }\n            })\n          .on(\"mousemove\", function(){return tooltip.style(\"top\", (d3.event.pageY-10)+\"px\").style(\"left\",(d3.event.pageX+10)+\"px\");})\n          .on(\"mouseout\", function(){return tooltip.style(\"visibility\", \"hidden\");})\n          .on(\"click\", clickWorld);\n\n\n         function clickWorld(){\n          if (!maximizeWorld){\n            maximizeWorld = true\n\n            world.selectAll('path')\n            .transition()\n            .duration(750)\n            .attr('d', geoPath)\n\n            minimizeZoo = true\n            zoo.selectAll('path')\n            .transition()\n            .duration(750)\n            .attr('d', cornerPath)\n          }\n          else {\n            maximizeWorld = false\n            d3.selectAll('path')\n            .transition()\n            .duration(750)\n            .attr('d', cornerPath)\n\n            minimizeZoo = false \n            zoo.selectAll('path')\n            .transition()\n            .duration(750)\n            .attr('d', geoPath)\n            \n          }\n          }\n\n          var zoo = svg\n          .append( \"g\" )\n          \n      \n           zoo.selectAll( \"path\" )\n          .data( globe.features )\n          .enter()\n          .append( \"path\" )\n          .attr(\"fill\", '#ccc')\n          .attr( \"stroke\", \"#333\")\n          .attr( \"d\", cornerPath )\n          .attr(\"class\", \"data\")\n          // .on(\"mouseover\", function(d){\n          //  if (d.properties.cases){\n          //     tooltip.html(`${d.properties.name_long} <br> \n          //     ${d.properties.cases} cases`); \n          //     return tooltip.style(\"visibility\", \"visible\").style(\"text-align\", \"center\");\n          //  }\n          //   })\n          // .on(\"mousemove\", function(){return tooltip.style(\"top\", (d3.event.pageY-10)+\"px\").style(\"left\",(d3.event.pageX+10)+\"px\");})\n          // .on(\"mouseout\", function(){return tooltip.style(\"visibility\", \"hidden\");})\n          .on(\"click\", clickZoo);\n\n          function clickZoo(){\n          if (!maximizeZoo){\n              maximizeZoo = true\n              zoo.selectAll('path')\n              .transition()\n              .duration(750)\n              .attr('d', geoPath)\n\n              minimizeWorld = true \n              world.selectAll('path')\n              .transition()\n              .duration(750)\n              .attr('d', cornerPath)\n          }\n          else {\n            maximizeZoo = false; \n            zoo.selectAll('path')\n              .transition()\n              .duration(750)\n              .attr('d', cornerPath)\n\n              minimizeWorld = false\n              world.selectAll('path')\n              .transition()\n              .duration(750)\n              .attr('d', geoPath)\n\n          }\n            }\n\n      \n\n      \n        \n          function zoomed () {\n            svg.attr(\"transform\", d3.event.transform.toString())\n            world.attr(\"transform\", d3.event.transform.toString())\n            zoo.attr(\"transform\", d3.event.transform.toString())\n          }\n        \n}\n\n\n    \n    render(){\n      return (\n        <div className=\"MapGraphic\">\n          <div ref=\"jsx_map\" id=\"map\"></div>\n        </div>\n      );\n      }\n    }\n\n    export default Map;","\nimport Map from './Map'\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './App.css';\n\nclass App extends React.Component {\n\nrender(){\n  return (\n    <div className=\"App\">\n      <Map/>\n    </div>\n  );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}